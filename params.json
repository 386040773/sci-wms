{"name":"Sci-wms","tagline":"Sci-wms: A Python WMS service for geospatial gridded data (Only unstructured FVCOM and ADCIRC grids logically rectangular grids supported)","body":"#sci-wms\r\n\r\nCOPYRIGHT 2010 Alexander Crosby\r\n\r\n####A Python WMS service for geospatial gridded data\r\n\r\n##System Requirements\r\n\r\n- >= 4GB RAM But it depends directly on the size and extents of the datasets you will be visualizing.\r\n- > 2 CPU (> 4 CPU Better) \r\n- Python 2.7.x with sqlite\r\n- LibGeos (http://download.osgeo.org/geos/)\r\n- LibSpatialIndex (http://libspatialindex.github.com)\r\n- netCDF4 C library (with opendap enabled, if opendap/remote functionality is desired)\r\n- libhdf5 C library (dependency of netCDF4)\r\n- libcurl (required for opendap)\r\n\r\nYour system may have already installed the following dependencies, but \r\nthey are required by some of the module dependencies installed in the next section.\r\n\r\n- libpng\r\n- libfreetype\r\n- libjpeg\r\n- libevent\r\n\r\n##Community\r\n\r\n[We have started a Google Group for the sci-wms project located here.](https://groups.google.com/forum/?fromgroups#!forum/sci-wms)\r\n\r\n##Installation\r\n\r\n[Download the compressed project and unpack anywhere.](http://acrosby.github.com/sci-wms) This is where the installation will live.\r\n\r\nInstall the following Python dependencies using `pip`, `easy_install`, or equivalent. \r\nIf you are using [virtualenv](http://www.virtualenv.org/en/latest/), just make \r\nsure you have the environment\r\nactivated before you try to install the packages or point to the environment\r\nwith pip on the install command.\r\n```bash\r\npip install numpy\r\npip install django>=1.4\r\npip install gunicorn\r\npip install gevent\r\npip install matplotlib>=1.2.0\r\npip install netCDF4\r\npip install shapely\r\npip install rtree\r\n```\r\n\r\nYou also need to ensure that you have basemap matplotlib toolkit installed, \r\nwhich isn't available from pypi.\r\n```bash\r\nwget http://sourceforge.net/projects/matplotlib/files/matplotlib-toolkits/basemap-1.0.6/basemap-1.0.6.tar.gz\r\npip install basemap-1.0.6.tar.gz\r\n```\r\n\r\nIf your version of the HDF5 C libraries is >=1.8.10, you may have to install \r\nthe netCDF4 Python module from the source repository in order for it to work properly. \r\nThis requires an SVN client to be installed on your system. (Please let us know if \r\nyou have problems importing netCDF4 in Python after running this command.)\r\n```bash\r\npip install -e svn+http://netcdf4-python.googlecode.com/svn/trunk#egg=netCDF4\r\n```\r\n\r\nIf your NetCDF4 and HDF5 libraries are in non-typical locations, you will need to pass the locations to the `pip` command:\r\n```bash\r\nNETCDF4_DIR=path HDF5_DIR=path pip install netCDF4\r\n```\r\n\r\nIf there is problem with gevent or greenlet, or if you would like gunicorn \r\nto use an alternative worker, you can install the `eventlet` worker. With some configuration \r\nof the sci-wms gunicorn configuration files,  you can also use `tornado` workers.\r\n\r\n```bash\r\npip install eventlet\r\npip install tornado\r\n```\r\n\r\n##Test\r\nTo make sure that dependencies have been installed correctly, and that sci-wms is fully functional. \r\nRun the following command to run the tests.\r\n```bash\r\ncd sci-wms/src/pywms && python manage.py test\r\n```\r\n\r\n##Start the services\r\nYou can start the services on port 7000 from the command line by using the following commands. [Learn about gunicorn wsgi server configuration by clicking here.](http://gunicorn.org/)\r\n```bash\r\ncd sci-wms/src/pywms && gunicorn_django -c config_public.py\r\n```\r\n\r\n##Caveats:\r\n\r\nLook at [https://github.com/acrosby/sci-wms/issues?state=open](https://github.com/acrosby/sci-wms/issues?state=open) for a list of known issues and problems.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}