{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Sci-wms","body":"sci-wms\r\n=========\r\n\r\n####A Python WMS service for geospatial gridded data (Only unstructured FVCOM and ADCIRC grids and structured grids officially supported)\r\n\r\n![Global HYCOM as filled contours](https://raw.github.com/acrosby/sci-wms/master/src/pywms/wms/static/example1.png)\r\n\r\n##System Requirements\r\n\r\n- >= 4GB RAM But it depends directly on the size and extents of the datasets you will be visualizing.\r\n- > 2 CPU (> 4 CPU Better) \r\n- Python > Version 2.6\r\n\r\n##Roadmap\r\n\r\n####Version 1:\r\n- Bug free working implementation of the current dev code\r\n- working getcaps\r\n- working getmap\r\n- working getlegendgraphic for non-autoscaling colormap styles\r\n- service based dataset initialization and updating in addition to admin\r\n- support for native Adcirc and FVCOM model output meshes\r\n\r\n####Version 1.1:\r\n- Support for rectilinear and curvilinear grids\r\n- some wps functionality\r\n- projections other than web mercator\r\n- working getlegendgraphic response for the autoscaling colormap styles\r\n- server-wide symbolization customization in admin\r\n\r\n####Experimental Fork/Branch:\r\n- Leverage hardware/opengl rendering for high overhead styles (facets, arrows...)\r\n\r\n","tagline":"Sci-wms: A Python WMS service for geospatial gridded data (Only unstructured FVCOM and ADCIRC grids logically rectangular grids supported)"}